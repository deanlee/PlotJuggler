name: openpilot plugins

on: [push, pull_request]

env:
  ZIP: |
    cd $GITHUB_WORKSPACE/build/bin
    export PATH=/usr/local/opt/gnu-tar/libexec/gnubin:$PATH
    sudo tar -czf $(uname -s)-$(uname -m).tar.gz plotjuggler libDataLoadRlog.* libDataStreamCereal.*

jobs:
  build_ubuntu:
    name: build ubuntu
    strategy:
      matrix:
        arch: ${{ fromJson(
           ((github.repository == 'commaai/plotjuggler') &&
              ((github.event_name != 'pull_request') || 
               (github.event.pull_request.head.repo.full_name == 'commaai/plotjuggler'))) && '["x86_64", "aarch64"]' || '["x86_64"]' ) }}    
    runs-on: ${{ (matrix.arch == 'aarch64') && 'buildjet-4vcpu-ubuntu-2204-arm' || 'ubuntu-20.04' }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: build
      run: ./build.sh
    - name: zip plugins
      run: eval "$ZIP"
    - name: upload
      if: github.ref == 'refs/heads/comma-master' && github.event_name == 'push'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/bin/*.tar.gz
        file_glob: true
        tag: "latest"
        overwrite: true

  build_mac:
    name: build mac
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2
      with:
        python-version: '3.11.x'
    - name: setup dependencies
      run: |
        brew install cmake bzip2 capnp qt@5 zeromq protobuf@3 gnu-tar
        sudo pip3 install --no-cache-dir -r 3rdparty/opendbc/requirements.txt
    - name: build
      run: |
        export PYTHONPATH=$PWD/3rdparty
        # force usage of protobuf@3 instead of protobuf
        mkdir -p build && cd build && cmake -DCMAKE_PREFIX_PATH="$(brew --prefix)/opt/protobuf@3" .. && make -j8
    - name: zip plugins
      run: eval "$ZIP"
    - name: upload
      if: github.ref == 'refs/heads/comma-master' && github.event_name == 'push'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/bin/*.tar.gz
        file_glob: true
        tag: "latest"
        overwrite: true
